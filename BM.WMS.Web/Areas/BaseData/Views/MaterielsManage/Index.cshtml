@using Abp.Extensions
@using BM.WMS.Authorization
@using BM.WMS.Web.App_Start.Navigation
@using BM.WMS.Web.Utils
@{
    ViewBag.CurrentPageName = AppPermissions.Materiels;
    Layout = "~/Views/Shared/_Index_Layout.cshtml";
}
<form id="filterForm" class="horizontal-form">
    <div class="mvctool">
        <input name="filterText" type="text" placeholder='@L("MaterialCode"),@L("MaterialName")' class="searchText" />
        @Html.ToolButton("btnQuery", "fa fa-search", L("Query"), "Query", true)
        @if (IsGranted(AppPermissions.Materiels_CreateMateriels))
        {
            @Html.ToolButton("btnCreate", "fa fa-plus", L("CreateMateriels"), "Create", true)
        }
        @Html.ToolButton("btnRefresh", "fa fa-refresh", L("Refresh"), "Refresh", false)
    </div>
</form>
<div class="datagridui">
    <table id="List"></table>
</div>
@Html.Partial("~/Views/Shared/_Partial_AutoGrid.cshtml")

<script type="text/javascript">
    $(function () {
        var _$materielssTable = $('#MaterielssTable');
        var _materielsService = abp.services.app.materiels;

        var _permissions = {
            create: abp.auth.hasPermission("Pages.Materiels.CreateMateriels"),
            edit: abp.auth.hasPermission("Pages.Materiels.EditMateriels"),
            'delete': abp.auth.hasPermission("Pages.Materiels.DeleteMateriels")
        };

        var itemsColumns = [
               {
                   field: 'id', title: app.localize('Actions'), width: '10%', formatter: function (value, row, index) {
                       var actionhtml = "";
                       if (_permissions.edit) {
                           actionhtml += '<button class="btnUpdate btn btn-default btn-xs" data-id="' + row.id + '" title="' + app.localize('Edit') + '"><i class="fa fa-edit"></i></button>';
                       }
                       if (_permissions.delete) {
                           actionhtml += '<button class="btnDelete btn btn-default btn-xs" data-id="' + row.id + '" data-materialName="' + row.materialName + '" title="' + app.localize('Delete') + '"><i class="fa fa-trash-o"></i></button>';
                       }
                       return actionhtml;
                   }
               },
               { field: "className", title: app.localize('ClassName'), sortable: true, width: '10%', align: 'center' },
               { field: "shortCode", title: app.localize('ShortCode'), sortable: true, width: '10%', align: 'center' },
               { field: "materialCode", title: app.localize('MaterialCode'), sortable: true, width: '10%', align: 'center' },
               { field: "materialName", title: app.localize('MaterialName'), sortable: true, width: '10%', align: 'center' },
               { field: "fullName", title: app.localize('FullName'), sortable: true, width: '10%', align: 'center' },
               { field: "helperCode", title: app.localize('HelperCode'), sortable: true, width: '10%', align: 'center' },
               { field: "model", title: app.localize('Model'), sortable: true, width: '10%', align: 'center' },
               { field: "unit", title: app.localize('Unit'), sortable: true, width: '10%', align: 'center' },
               { field: "remark", title: app.localize('Remark'), sortable: true, width: '10%', align: 'center' },
               { field: "creationTime", title: app.localize('CreationTime'), sortable: true, width: '10%', formatter: function (value) { return moment(value).format('YYYY-MM-DD HH:mm:ss'); }, align: 'center' }
        ];
        var options = {
            table: "#List",
            columns: itemsColumns,
            url: abp.appPath + "api/services/app/materiels/GetPagedMaterielssAsync",
            sortName: "materialCode",
            sortOrder: "desc",
            height: SetGridHeightSub(45),
            fitColumns: true
        }

        _grid = new abp.grid();
        _grid.init(options);

        var _createOrEditModal = new app.ModalManager({
            viewUrl: abp.appPath + 'BaseData/MaterielsManage/CreateOrEditMaterielsModal',
            scriptUrl: abp.appPath + 'Areas/BaseData/Views/MaterielsManage/_CreateOrEditMaterielsModal.js',
            modalClass: 'CreateOrEditMaterielsModal',
            reloadList: _grid.reloadList
        });

        $("#btnQuery").click(function () {
            var param = $("#filterForm").serializeFormToObject();
            console.log(param);
            _grid.loadList(param);
        });

        $('#filterForm').keydown(function (e) {
            if (e.which == 13) {
                e.preventDefault();
                _grid.loadList($("#filterForm").serializeFormToObject());
            }
        })

        $("#btnCreate").click(function () {
            _createOrEditModal.open();
        });

        $("#btnRefresh").click(function () {
            //var win = top || window;
            //win.addTab('test', 'BaseData/MaterielsManage', 'fa fa-check');
            _grid.reloadList();
        })

        $(".datagridui").on("click", ".btnUpdate", function () {
            var self = $(this);
            var id = self.attr("data-id");
            _createOrEditModal.open({ id: id });
        })

        $(".datagridui").on("click", ".btnDelete", function () {
            var self = $(this);
            var id = self.attr("data-id");
            var materialName = self.attr("data-materialName");
            abp.message.confirm(
                app.localize('MaterielsDeleteWarningMessage', materialName),
                    function (isConfirmed) {
                        if (isConfirmed) {
                            _materielsService.deleteMaterielsAsync({
                                id: id
                            }).done(function () {
                                _grid.reloadList();
                                abp.notify.success(app.localize('SuccessfullyDeleted'));
                            });
                        }
                    }
                );
        })
    })
</script>







