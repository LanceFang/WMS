@using Abp.Application.Services.Dto
@using Abp.Extensions
@using Abp.Web.Mvc.Extensions
@using Abp.Timing;
@using BM.WMS.Web.App_Start.Navigation
@model BM.WMS.Web.Areas.SystemInfo.Models.HostSettings.HostSettingsViewModel
@{
    ViewBag.CurrentPageName = PageNames.App.Host.Settings;
    Layout = "~/Views/Shared/_Index_Layout.cshtml";
}
<div style="padding:4px 5px 0px 5px;" id="SettingsTabPanel">
    <div class="row margin-bottom-5">
        <div class="col-xs-6">
            <div class="page-head">
                <div class="page-title">
                    <h4>
                        <span>@L("Settings")</span> <small>@L("SettingsHeaderInfo")</small>
                    </h4>
                </div>
            </div>
        </div>
        <div class="col-xs-6 text-right">
            <button id="SaveAllSettingsButton" class="btn btn-primary blue" style="margin-right:20px"><i class="fa fa-floppy-o"></i> @L("SaveAll")</button>
        </div>
    </div>
    <div class="easyui-tabs">
        @if (Clock.SupportsMultipleTimezone)
        {
            <div title="@L("General")" style="padding:10px;">
                <div class="tab-pane active" id="SettingsGeneralTab">
                    <form id="GeneralSettingsForm">
                        <div class="form-group form-md-line-input form-md-floating-label no-hint">
                            <label>@L("Timezone")</label>
                            @Html.DropDownList("Timezone", Model.TimezoneItems.Select(i => i.ToSelectListItem()),
                           new { @class = "form-control edited" })
                        </div>
                        <div>
                            @Html.Hidden("TimezoneForComparison", Model.Settings.General.TimezoneForComparison)
                        </div>
                    </form>
                </div>
            </div>
        }
        <div title="@L("TenantManagement")" style="padding:20px; display:none; ">
            <form id="TenantManagementSettingsForm">
                <h4>@L("FormBasedRegistration")</h4>
                <div class="md-checkbox-list">
                    <div class="md-checkbox">
                        <input id="Setting_AllowSelfRegistration" class="md-check" type="checkbox" name="AllowSelfRegistration"
                               value="true" @( Model.Settings.TenantManagement.AllowSelfRegistration ? "checked=\" checked\"" : "" )>
                        <label for="Setting_AllowSelfRegistration">
                            <span class="inc"></span>
                            <span class="check"></span>
                            <span class="box"></span>
                            @L("AllowTenantsToRegisterThemselves")
                        </label>
                        <span class="help-block">@L("AllowTenantsToRegisterThemselves_Hint")</span>
                    </div>
                    <div class="md-checkbox">
                        <input id="Setting_IsNewRegisteredTenantActiveByDefault" class="md-check" type="checkbox" name="IsNewRegisteredTenantActiveByDefault" value="true"
                               @( Model.Settings.TenantManagement.IsNewRegisteredTenantActiveByDefault ? "checked=\" checked\"" : "" )>
                        <label for="Setting_IsNewRegisteredTenantActiveByDefault">
                            <span class="inc"></span>
                            <span class="check"></span>
                            <span class="box"></span>
                            @L("NewRegisteredTenantsIsActiveByDefault")
                        </label>
                        <span class="help-block">@L("NewRegisteredTenantsIsActiveByDefault_Hint")</span>
                    </div>
                    <div class="md-checkbox">
                        <input id="Setting_UseCaptchaOnRegistration" class="md-check" type="checkbox" name="UseCaptchaOnRegistration"
                               value="true" @( Model.Settings.TenantManagement.UseCaptchaOnRegistration ? "checked=\" checked\"" : "" )>
                        <label for="Setting_UseCaptchaOnRegistration">
                            <span class="inc"></span>
                            <span class="check"></span>
                            <span class="box"></span>
                            @L("UseCaptchaOnRegistration")
                        </label>
                    </div>
                </div>
                <div class="form-group form-md-line-input form-md-floating-label no-hint">
                    <label for="DefaultEditionId">@L("Edition")</label>
                    @Html.DropDownList("DefaultEditionId", Model.EditionItems.Select(i => i.ToSelectListItem()), new { @class = "form-control edited" })
                </div>
            </form>
        </div>
        <div title="@L("UserManagement")" style="padding:20px;  display:none;">
            <form id="UserManagementSettingsForm">
                <div class="md-checkbox-list">
                    <div class="md-checkbox">
                        <input id="Settings_IsEmailConfirmationRequiredForLogin" class="md-check" type="checkbox" name="IsEmailConfirmationRequiredForLogin" value="true"
                               @( Model.Settings.UserManagement.IsEmailConfirmationRequiredForLogin ? "checked=\" checked\"" : "" )>
                        <label for="Settings_IsEmailConfirmationRequiredForLogin">
                            <span class="inc"></span>
                            <span class="check"></span>
                            <span class="box"></span>
                            @L("EmailConfirmationRequiredForLogin")
                        </label>
                    </div>
                </div>
            </form>
        </div>
        <div title="@L("Security")" style="padding:20px; display:none;">
            <div>
                <h4>@L("PasswordComplexity")</h4>
                <div class="md-checkbox-list">
                    <div class="md-checkbox">
                        <input id="Setting_PasswordComplexity_UseDefaultSettings" class="md-check" type="checkbox" name="UseDefaultSettings" value="true" @( Model.Settings.Security.UseDefaultPasswordComplexitySettings ? "checked=\" checked\"" : "" )>
                        <label for="Setting_PasswordComplexity_UseDefaultSettings">
                            <span class="inc"></span>
                            <span class="check"></span>
                            <span class="box"></span>
                            @L("UseDefaultSettings")
                        </label>
                    </div>
                </div>
                <form id="PasswordComplexitySettingsForm" style="@(Model.Settings.Security.UseDefaultPasswordComplexitySettings ? "display:none;" : "")">
                    <div class="form-group form-md-line-input form-md-floating-label no-hint">
                        <input type="number" name="MinLength" class="form-control edited" value="@Model.Settings.Security.PasswordComplexity.MinLength">
                        <label>@L("MinPasswordLength")</label>
                    </div>
                    <div class="form-group form-md-line-input form-md-floating-label no-hint">
                        <input type="number" name="MaxLength" class="form-control edited" value="@Model.Settings.Security.PasswordComplexity.MaxLength">
                        <label>@L("MaxPasswordLength")</label>
                    </div>
                    <div class="md-checkbox-list">
                        <div class="md-checkbox">
                            <input id="Setting_PasswordComplexity_UseNumbers" class="md-check" type="checkbox" name="UseNumbers"
                                   value="true" @( Model.Settings.Security.PasswordComplexity.UseNumbers ? "checked=\" checked\"" : "" )>
                            <label for="Setting_PasswordComplexity_UseNumbers">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("UseNumbers")
                            </label>
                        </div>
                        <div class="md-checkbox">
                            <input id="Setting_PasswordComplexity_UseUpperCaseLetters" class="md-check" type="checkbox" name="UseUpperCaseLetters" value="true" @( Model.Settings.Security.PasswordComplexity.UseUpperCaseLetters ? "checked=\" checked\"" : "" )>
                            <label for="Setting_PasswordComplexity_UseUpperCaseLetters">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("UseUpperCaseLetters")
                            </label>
                        </div>
                        <div class="md-checkbox">
                            <input id="Setting_PasswordComplexity_UseLowerCaseLetters" class="md-check" type="checkbox" name="UseLowerCaseLetters" value="true" @( Model.Settings.Security.PasswordComplexity.UseLowerCaseLetters ? "checked=\" checked\"" : "" )>
                            <label for="Setting_PasswordComplexity_UseLowerCaseLetters">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("UseLowerCaseLetters")
                            </label>
                        </div>
                        <div class="md-checkbox">
                            <input id="Setting_PasswordComplexity_UsePunctuations" class="md-check" type="checkbox" name="UsePunctuations"
                                   value="true" @( Model.Settings.Security.PasswordComplexity.UsePunctuations ? "checked=\" checked\"" : "" )>
                            <label for="Setting_PasswordComplexity_UsePunctuations">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("UsePunctuations")
                            </label>
                        </div>
                    </div>
                </form>
                <form id="DefaultPasswordComplexitySettingsForm" style="@(!Model.Settings.Security.UseDefaultPasswordComplexitySettings ? "display:none;" : "")">
                    <div class="form-group form-md-line-input form-md-floating-label no-hint">
                        <input type="number" name="MinLength" class="form-control edited" value="@Model.Settings.Security.DefaultPasswordComplexity.MinLength" disabled>
                        <label>@L("MinPasswordLength")</label>
                    </div>
                    <div class="form-group form-md-line-input form-md-floating-label no-hint">
                        <input type="number" name="MaxLength" class="form-control edited" value="@Model.Settings.Security.DefaultPasswordComplexity.MaxLength" disabled>
                        <label>@L("MaxPasswordLength")</label>
                    </div>
                    <div class="md-checkbox-list">
                        <div class="md-checkbox">
                            <input id="Setting_DefaultPasswordComplexity_UseNumbers" class="md-check" type="checkbox" name="UseNumbers"
                                   value="true" @( Model.Settings.Security.DefaultPasswordComplexity.UseNumbers ? "checked=\" checked\"" : "" ) disabled>
                            <label for="Setting_DefaultPasswordComplexity_UseNumbers">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("UseNumbers")
                            </label>
                        </div>
                        <div class="md-checkbox">
                            <input id="Setting_DefaultPasswordComplexity_UseUpperCaseLetters" class="md-check" type="checkbox" name="UseUpperCaseLetters" value="true" @( Model.Settings.Security.DefaultPasswordComplexity.UseUpperCaseLetters ? "checked=\" checked\"" : "" ) disabled>
                            <label for="Setting_DefaultPasswordComplexity_UseUpperCaseLetters">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("UseUpperCaseLetters")
                            </label>
                        </div>
                        <div class="md-checkbox">
                            <input id="Setting_DefaultPasswordComplexity_UseLowerCaseLetters" class="md-check" type="checkbox" name="UseLowerCaseLetters" value="true" @( Model.Settings.Security.DefaultPasswordComplexity.UseLowerCaseLetters ? "checked=\" checked\"" : "" ) disabled>
                            <label for="Setting_DefaultPasswordComplexity_UseLowerCaseLetters">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("UseLowerCaseLetters")
                            </label>
                        </div>
                        <div class="md-checkbox">
                            <input id="Setting_DefaultPasswordComplexity_UsePunctuations" class="md-check" type="checkbox" name="UsePunctuations" value="true" @( Model.Settings.Security.DefaultPasswordComplexity.UsePunctuations ? "checked=\" checked\"" : "" ) disabled>
                            <label for="Setting_DefaultPasswordComplexity_UsePunctuations">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("UsePunctuations")
                            </label>
                        </div>
                    </div>
                </form>
            </div>
            <div>
                <h4>@L("UserLockOut")</h4>
                <form id="UserLockOutSettingsForm">
                    <div class="md-checkbox-list">
                        <div class="md-checkbox">
                            <input id="Setting_UserLockOut_IsEnabled" class="md-check" type="checkbox" name="IsEnabled"
                                   value="true" @( Model.Settings.Security.UserLockOut.IsEnabled ? "checked=\" checked\"" : "" )>
                            <label for="Setting_UserLockOut_IsEnabled">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("EnableUserAccountLockingOnFailedLoginAttemts")
                            </label>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input form-md-floating-label no-hint">
                        <input type="number" name="MaxFailedAccessAttemptsBeforeLockout" class="form-control edited" value="@Model.Settings.Security.UserLockOut.MaxFailedAccessAttemptsBeforeLockout">
                        <label>@L("MaxFailedAccessAttemptsBeforeLockout")</label>
                    </div>
                    <div class="form-group form-md-line-input form-md-floating-label no-hint">
                        <input type="number" name="DefaultAccountLockoutSeconds" class="form-control edited" value="@Model.Settings.Security.UserLockOut.DefaultAccountLockoutSeconds">
                        <label>@L("DefaultAccountLockoutDurationAsSeconds")</label>
                    </div>
                </form>
            </div>
            <div>
                <h4>@L("TwoFactorLogin")</h4>
                <form id="TwoFactorLoginSettingsForm">
                    <div class="md-checkbox-list">
                        <div class="md-checkbox">
                            <input id="Setting_TwoFactorLogin_IsEnabled" class="md-check" type="checkbox" name="IsEnabled"
                                   value="true" @( Model.Settings.Security.TwoFactorLogin.IsEnabled ? "checked=\" checked\"" : "" )>
                            <label for="Setting_TwoFactorLogin_IsEnabled">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("EnableTwoFactorLogin")
                            </label>
                        </div>
                        <div class="md-checkbox">
                            <input id="Setting_TwoFactorLogin_IsEmailProviderEnabled" class="md-check" type="checkbox" name="IsEmailProviderEnabled" value="true" @( Model.Settings.Security.TwoFactorLogin.IsEmailProviderEnabled ? "checked=\" checked\"" : "" )>
                            <label for="Setting_TwoFactorLogin_IsEmailProviderEnabled">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("IsEmailVerificationEnabled")
                            </label>
                        </div>
                        <div class="md-checkbox">
                            <input id="Setting_TwoFactorLogin_IsSmsProviderEnabled" class="md-check" type="checkbox" name="IsSmsProviderEnabled" value="true" @( Model.Settings.Security.TwoFactorLogin.IsSmsProviderEnabled ? "checked=\" checked\"" : "" )>
                            <label for="Setting_TwoFactorLogin_IsSmsProviderEnabled">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("IsSmsVerificationEnabled")
                            </label>
                        </div>
                        <div class="md-checkbox">
                            <input id="Setting_TwoFactorLogin_IsRememberBrowserEnabled" class="md-check" type="checkbox" name="IsRememberBrowserEnabled" value="true" @( Model.Settings.Security.TwoFactorLogin.IsRememberBrowserEnabled ? "checked=\" checked\"" : "" )>
                            <label for="Setting_TwoFactorLogin_IsRememberBrowserEnabled">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("AllowToRememberBrowserForTwoFactorLogin")
                            </label>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div title="@L("EmailSmtp")" style="padding:20px;display:none;">
            <form id="EmailSmtpSettingsForm">
                <div class="form-group form-md-line-input form-md-floating-label no-hint">
                    <label>@L("DefaultFromAddress")</label>
                    <input type="email" name="DefaultFromAddress" value="@Model.Settings.Email.DefaultFromAddress"
                           class="form-control @(Model.Settings.Email.DefaultFromAddress.IsNullOrEmpty() ? "" : " edited")" maxlength="@BM.WMS.Authorization.Users.User.MaxEmailAddressLength">
                </div>
                <div class="form-group form-md-line-input form-md-floating-label no-hint">
                    <label>@L("DefaultFromDisplayName")</label>
                    <input type="text" name="DefaultFromDisplayName" value="@Model.Settings.Email.DefaultFromDisplayName"
                           class="form-control @(Model.Settings.Email.DefaultFromDisplayName.IsNullOrEmpty() ? "" : " edited")" maxlength="128">
                </div>
                <div class="form-group form-md-line-input form-md-floating-label no-hint">
                    <label>@L("SmtpHost")</label>
                    <input type="text" name="SmtpHost" maxlength="64" value="@Model.Settings.Email.SmtpHost"
                           class="form-control @(Model.Settings.Email.SmtpHost.IsNullOrEmpty() ? "" : " edited")">
                </div>
                <div class="form-group form-md-line-input form-md-floating-label no-hint">
                    <label>@L("SmtpPort")</label>
                    <input type="number" name="SmtpPort" class="form-control edited"
                           value="@Model.Settings.Email.SmtpPort" maxlength="5">
                </div>
                <div class="md-checkbox-list">
                    <div class="md-checkbox">
                        <input id="Settings_SmtpEnableSsl" class="md-check" type="checkbox" name="SmtpEnableSsl" value="true" @Html.Raw(Model.Settings.Email.SmtpEnableSsl ? "checked=\" checked\"" : "")>
                        <label for="Settings_SmtpEnableSsl">
                            <span class="inc"></span>
                            <span class="check"></span>
                            <span class="box"></span>
                            @L("UseSsl")
                        </label>
                    </div>
                    <div class="md-checkbox">

                        <input id="Settings_SmtpUseDefaultCredentials" class="md-check" type="checkbox" name="SmtpUseDefaultCredentials" value="true"
                               @Html.Raw(Model.Settings.Email.SmtpUseDefaultCredentials ? "checked=\" checked\"" : "")>
                        <label for="Settings_SmtpUseDefaultCredentials">
                            <span class="inc"></span>
                            <span class="check"></span>
                            <span class="box"></span>
                            @L("UseDefaultCredentials")
                        </label>
                    </div>
                </div>
                <div class="form-group form-md-line-input form-md-floating-label no-hint">
                    <label>@L("DomainName")</label>
                    <input type="text" name="SmtpDomain" class="form-control@(Model.Settings.Email.SmtpDomain.IsNullOrEmpty() ? "" : " edited")" value="@Model.Settings.Email.SmtpDomain" maxlength="128">

                </div>
                <div class="form-group form-md-line-input form-md-floating-label no-hint">
                    <label>@L("UserName")</label><input type="text" name="SmtpUserName" class="form-control@(Model.Settings.Email.SmtpUserName.IsNullOrEmpty() ? "" : " edited")" value="@Model.Settings.Email.SmtpUserName" maxlength="128">

                </div>
                <div class="form-group form-md-line-input form-md-floating-label no-hint">
                    <label>@L("Password")</label>
                    <input type="password" name="SmtpPassword" class="form-control@(Model.Settings.Email.SmtpPassword.IsNullOrEmpty() ? "" : " edited")" value="@Model.Settings.Email.SmtpPassword" maxlength="128">

                </div>
                <hr />
                <h4>@L("TestEmailSettingsHeader")</h4>
                <div class="row">
                    <div class="form-group form-md-line-input has-info form-md-floating-label col-md-4">
                        <input id="TestEmailAddressInput" type="text" class="form-control input-sm" value="@ViewBag.CurrentUserEmail">
                    </div>
                    <div class="form-group form-md-line-input col-md-2">
                        <button id="SendTestEmailButton" class="btn green-haze" type="button">@L("SendTestEmail")</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(function () {
        var _hostSettingsService = abp.services.app.hostSettings;
        var _initialTimeZone = $('#GeneralSettingsForm [name=Timezone]').val();
        var _usingDefaultTimeZone = $('#GeneralSettingsForm [name=TimezoneForComparison]').val() === abp.setting.values["Abp.Timing.TimeZone"];

        var _$tabPanel = $('#SettingsTabPanel');

        var _$smtpCredentialFormGroups = _$tabPanel
            .find('input[name=SmtpDomain],input[name=SmtpUserName],input[name=SmtpPassword]')
            .closest('.form-group');

        var _$tenantSettingsCheckboxes = _$tabPanel
           .find('input[name=IsNewRegisteredTenantActiveByDefault],input[name=UseCaptchaOnRegistration]')
           .closest('.md-checkbox');

        var _$userLockOutSettingsFormItems = $('#UserLockOutSettingsForm')
            .find('input')
            .not('#Setting_UserLockOut_IsEnabled')
            .closest('.form-group');

        var _$twoFactorLoginSettingsFormItems = $('#TwoFactorLoginSettingsForm')
            .find('input')
            .not('#Setting_TwoFactorLogin_IsEnabled')
            .closest('.md-checkbox');

        function toggleSmtpCredentialFormGroups() {
            if ($('#Settings_SmtpUseDefaultCredentials').is(':checked')) {
                _$smtpCredentialFormGroups.slideUp('fast');
            } else {
                _$smtpCredentialFormGroups.slideDown('fast');
            }
        }

        function toggleTenantManagementFormGroups() {
            if (!$('#Setting_AllowSelfRegistration').is(':checked')) {
                _$tenantSettingsCheckboxes.slideUp('fast');
            } else {
                _$tenantSettingsCheckboxes.slideDown('fast');
            }
        }

        function toggleUserLockOutSettingsFormItems() {
            if ($('#Setting_UserLockOut_IsEnabled').is(':checked')) {
                _$userLockOutSettingsFormItems.slideDown('fast');
            } else {
                _$userLockOutSettingsFormItems.slideUp('fast');
            }
        }

        function toggleTwoFactorLoginSettingsFormItems() {
            if ($('#Setting_TwoFactorLogin_IsEnabled').is(':checked')) {
                _$twoFactorLoginSettingsFormItems.slideDown('fast');
            } else {
                _$twoFactorLoginSettingsFormItems.slideUp('fast');
            }
        }

        toggleSmtpCredentialFormGroups();
        toggleTenantManagementFormGroups();
        toggleUserLockOutSettingsFormItems();
        toggleTwoFactorLoginSettingsFormItems();

        $('#Settings_SmtpUseDefaultCredentials').change(function () {
            toggleSmtpCredentialFormGroups();
        });

        $('#Setting_AllowSelfRegistration').change(function () {
            toggleTenantManagementFormGroups();
        });

        $('#Setting_UserLockOut_IsEnabled').change(function () {
            toggleUserLockOutSettingsFormItems();
        });

        $('#Setting_TwoFactorLogin_IsEnabled').change(function () {
            toggleTwoFactorLoginSettingsFormItems();
        });

        $('#Setting_PasswordComplexity_UseDefaultSettings').change(function (val) {
            if ($('#Setting_PasswordComplexity_UseDefaultSettings').is(":checked")) {
                $('#DefaultPasswordComplexitySettingsForm').show();
                $('#PasswordComplexitySettingsForm').hide();
            } else {
                $('#DefaultPasswordComplexitySettingsForm').hide();
                $('#PasswordComplexitySettingsForm').show();
            }
        });

        function getDefaultPasswordComplexitySettings() {
            //note: this is a fix for '$('#DefaultPasswordComplexitySettingsForm').serializeFormToObject()' always returns true for checkboxes if they are disabled.
            var $disabledDefaultPasswordInputs = $('#DefaultPasswordComplexitySettingsForm input:disabled');
            $disabledDefaultPasswordInputs.removeAttr("disabled");
            var defaultPasswordComplexitySettings = $('#DefaultPasswordComplexitySettingsForm').serializeFormToObject();
            $disabledDefaultPasswordInputs.attr("disabled", "disabled");
            return defaultPasswordComplexitySettings;
        }

        $('#SaveAllSettingsButton').click(function () {
            _hostSettingsService.updateAllSettings({
                general: $('#GeneralSettingsForm').serializeFormToObject(),
                tenantManagement: $('#TenantManagementSettingsForm').serializeFormToObject(),
                userManagement: $('#UserManagementSettingsForm').serializeFormToObject(),
                email: $('#EmailSmtpSettingsForm').serializeFormToObject(),
                chat: $('#ChatSettingsForm').serializeFormToObject(),
                security: {
                    useDefaultPasswordComplexitySettings: $('#Setting_PasswordComplexity_UseDefaultSettings').is(":checked"),
                    passwordComplexity: $('#PasswordComplexitySettingsForm').serializeFormToObject(),
                    defaultPasswordComplexity: getDefaultPasswordComplexitySettings(),
                    userLockOut: $('#UserLockOutSettingsForm').serializeFormToObject(),
                    twoFactorLogin: $('#TwoFactorLoginSettingsForm').serializeFormToObject()
                }
            }).done(function () {
                $.msthreesecond( app.localize('SavedSuccessfully'));
                var newTimezone = $('#GeneralSettingsForm [name=Timezone]').val();
                if (abp.clock.provider.supportsMultipleTimezone &&
                        _usingDefaultTimeZone &&
                        _initialTimeZone !== newTimezone) {
                    abp.message.info(app.localize('TimeZoneSettingChangedRefreshPageNotification')).done(function () {
                        window.location.reload();
                    });
                }
            });
        });

        $('#SendTestEmailButton').click(function () {
            _hostSettingsService.sendTestEmail({
                emailAddress: $('#TestEmailAddressInput').val()
            }).done(function () {
                abp.notify.info(app.localize('TestEmailSentSuccessfully'));
            });
        });




        //fixPanelHeight();

        function fixPanelHeight() {
            // $('.panel').css('height', SetGridHeightSub(130) + 'px');
            $('.panel').css('width', SetGridWidthSub(20) + 'px');
            $('.panel-body').css('width', SetGridWidthSub(20) + 'px');
            $('.tabs-panels').css('width', SetGridWidthSub(20) + 'px');
            $('.tabs-wrap').css('width', SetGridWidthSub(20) + 'px');
            $('.tabs-header').css('width', SetGridWidthSub(20) + 'px');
        }

        $(window).resize(function () {
            fixPanelHeight();
        });
    })

</script>
